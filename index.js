const startBtn = document.getElementById('startBtn')
const startScreen = document.getElementById('start-screen')
const chatScreen = document.getElementById('chat-screen')

startBtn.addEventListener('click', () => {
  startScreen.style.display = 'none'
  chatScreen.classList.remove('hidden')
})

flaps.addEventListener('click', () => {
  location.reload()
})

const send = document.getElementById('send')
const messageInput = document.getElementById('messageInput')
const chatMain = document.getElementById('chatMain')

function createMessage(text, sender = 'user') {
  const msg = document.createElement('div')
  msg.textContent = text
  msg.style.padding = '10px'
  msg.style.margin = '5px 0'
  msg.style.borderRadius = '8px'
  msg.style.maxWidth = '70%'
  msg.style.fontFamily = 'sans-serif'
  msg.style.backgroundColor = sender === 'user' ? '#e0e0e0' : '#fff3cd'
  msg.style.alignSelf = sender === 'user' ? 'flex-end' : 'flex-start'
  chatMain.appendChild(msg)
  chatMain.scrollTop = chatMain.scrollHeight
}

send.addEventListener('click', () => {
  const text = messageInput.value.trim()
  if (text === '') return

  createMessage(text, 'user')
  if (socket && socket.readyState === WebSocket.OPEN) {
    socket.send(text)
  } else {
    createMessage(
      '‚ùó –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É.',
      'server'
    )
  }
  messageInput.value = ''
})

messageInput.addEventListener('keydown', (event) => {
  if (event.key === 'Enter') {
    send.click()
  }
})

let socket
function connectWebSocket() {
  socket = new WebSocket('wss://ws.ifelse.io')
  // socket = new WebSocket('ws://ws.ifelse404')

  socket.addEventListener('open', () => {
    createMessage('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!', 'server')
  })

  socket.addEventListener('message', (event) => {
    createMessage(event.data, 'server')
  })

  socket.addEventListener('error', () => {
    createMessage('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º.', 'server')
  })

  socket.addEventListener('close', () => {
    createMessage('üîÑ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∞—é—Å—å...', 'server')
    setTimeout(connectWebSocket, 3000)
  })
}
connectWebSocket()
const geoBtn = document.getElementById('geolocation')

const phrases = [
  '–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é, –≥–¥–µ —Ç—ã –∂–∏–≤—ë—à—å... üëÄ',
  '–ú—ã –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è —Ä–∞–Ω—å—à–µ, —á–µ–º —Ç—ã –¥—É–º–∞–µ—à—å...',
  '–Ø —É–∂–µ —Ä—è–¥–æ–º... üë£',
  '–ü—Ä–∏—è—Ç–Ω—ã–π —Ä–∞–π–æ–Ω üòè',
  '–ö–∞–∂–µ—Ç—Å—è, —ç—Ç–æ —Ç–≤–æ—è —É–ª–∏—Ü–∞‚Ä¶',
  '–Ø –≤–∏–∂—É —Ç–≤–æ–π –¥–æ–º',
  '–í—ã–≥–ª—è–Ω–∏ –≤ –æ–∫–Ω–æ üòà',
  '–ò–¥–∏ –æ—Ç–∫—Ä—ã–≤–∞–π –¥–≤–µ—Ä—å, —è —É–∂–µ –ø–æ–¥–Ω–∏–º–∞—é—Å—å‚Ä¶',
  '–¢—ã —Ö–æ—Ä–æ—à–æ —Å–ø—Ä—è—Ç–∞–ª—Å—è‚Ä¶ –ø–æ—á—Ç–∏',
  '–•–æ—Ä–æ—à–µ–µ –º–µ—Å—Ç–µ—á–∫–æ —É —Ç–µ–±—è!',
  '–û—Ç–∫—Ä–æ–π –¥–≤–µ—Ä—å —è –∂–¥—É üö™',
  '–õ–∞–¥–Ω–æ‚Ä¶ —è –ø—Ä–∏–¥—É –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑.',
  '–¢–æ–ª—å–∫–æ –±—É–¥—å –≥–æ—Ç–æ–≤ ‚Äî —è –∑–Ω–∞—é, –≥–¥–µ —Ç—ã –∂–∏–≤—ë—à—å üòâ',
]
geoBtn.addEventListener('click', () => {
  if ('geolocation' in navigator) {
    navigator.geolocation.getCurrentPosition((pos) => {
      const lat = pos.coords.latitude.toFixed(6)
      const lon = pos.coords.longitude.toFixed(6)

      const now = new Date().toLocaleTimeString([], {
        hour: '2-digit',
        minute: '2-digit',
      })
      const link = `https://www.openstreetmap.org/#map=17/${lat}/${lon}`

      const geoMessage = document.createElement('div')
      geoMessage.className = 'message user'
      geoMessage.innerHTML = `üìç <a href="${link}" target="_blank">–ú–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ(${now})</a>`
      chatMain.appendChild(geoMessage)

      chatMain.scrollTop = chatMain.scrollHeight

      let index = 0
      const interval = setInterval(() => {
        if (index >= phrases.length) {
          clearInterval(interval)
          return
        }
        const reply = document.createElement('div')
        reply.className = 'message server'
        reply.textContent = phrases[index]
        chatMain.appendChild(reply)
        chatMain.scrollTop = chatMain.scrollHeight

        index++
      }, 3000)
    })
  } else {
    alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.')
  }
})
